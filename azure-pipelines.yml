trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- powershell: |
    $filePath = "Common"
    if (-not (Test-Path $filePath)) {
        Write-Output "The file '$filePath' does not exist."
        exit 1  # Fail the task
    } else {
        Write-Output "The file '$filePath' exists."
    }
  displayName: 'Check File Existence'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: '**/WebApplication1Tests/*.csproj'
    arguments: '--configuration Release --collect "Code coverage"'
    publishTestResults: true
    publishCodeCoverage: true

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    condition: always()

- task: PublishBuildArtifacts@1
  displayName: 'PublishBuildArtifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dll_file'
    publishLocation: 'Container'
- task: PowerShell@2
  displayName: 'GET Request'
  inputs: 
    targetType: inline
    script: |
        $uri = "https://codeanalysis.azurewebsites.net/CodeAnalysis/GetName"
        $response = Invoke-RestMethod -Uri $uri -Method Get
        echo $response     
- task: PowerShell@2
  displayName: 'Send POST Request'
  inputs:
    targetType: inline
    script: |
        # Define the URL for the POST request
        $uri = "https://codeanalysis.azurewebsites.net/CodeAnalysis/Post?age=29&name=nithih"

        # Define the JSON payload to send in the request body
        $jsonPayload = @{
            age = "34"
            name = "Navtish "
            # Add more key-value pairs as needed for your API
        } | ConvertTo-Json

        # Send the POST request with the JSON payload
        try {
            $response = Invoke-RestMethod -Uri $uri -Method Post -ContentType 'application/json' -Body $jsonPayload

            # Output the response from the API
            echo $response
        } catch {
            # Handle any exceptions that occur during the API request
            Write-Error "Failed to send POST request: $_"
            exit 1  # Fail the task if the request fails
        }