trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- powershell: |
    $filePath = "Common"
    if (-not (Test-Path $filePath)) {
        Write-Output "The file '$filePath' does not exist."
        exit 1  # Fail the task
    } else {
        Write-Output "The file '$filePath' exists."
    }
  displayName: 'Check File Existence'


- pwsh : |
      $uri = "https://raw.githubusercontent.com/Thoparam-sai-nithish/DevOps/master/DevOpsTests/UnitTestDemoTests.cs"
      $fileContent = Invoke-RestMethod -Uri $uri -Method Get
      echo "Downloaded File Content is: $fileContent"

      # CHECK KEYWORDS
      $checkKeywordsUri = "https://codeanalysis.azurewebsites.net/CodeAnalysis/CheckKeywords"
      $checkKeywordsBody = @{
          "CodeSnippet" = $fileContent
      } | ConvertTo-Json
      $response = Invoke-RestMethod -Uri $checkKeywordsUri -Method Post -ContentType "application/json" -Body $checkKeywordsBody
      echo "CHECK KEYWORDS RESPONSE : $response"

      # CHECK CODE (uncommented in the original script)
      $checkCodeUri = "https://codeanalysis.azurewebsites.net/CodeAnalysis/CheckCode"
      $checkCodeBody = @{
          "CodeSnippet" = $fileContent
      } | ConvertTo-Json
      $response = Invoke-RestMethod -Uri $checkCodeUri -Method Post -ContentType "application/json" -Body $checkCodeBody
      echo "CHECK CODE RESPONSE : $response"
  displayName: 'Run Code Analysis'
  

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/WebApplication1Tests/*.csproj'
    arguments: '--configuration Release --collect "Code coverage"'
    publishTestResults: true
    publishCodeCoverage: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    condition: always()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dll_file'
    publishLocation: 'Container'
- task: PowerShell@2
  displayName: 'GET Request'
  inputs: 
    targetType: inline
    script: |
        $uri = "https://codeanalysis.azurewebsites.net/CodeAnalysis/GetName"
        $response = Invoke-RestMethod -Uri $uri -Method Get
        echo $response     
